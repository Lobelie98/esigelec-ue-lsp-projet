<extensionManifest><systemApiVersion>1.10.0</systemApiVersion><extensions><extension><name>org.apache.nifi.processors.script.InvokeScriptedProcessor</name><type>PROCESSOR</type><deprecationNotice/><description>Experimental - Invokes a script engine for a Processor defined in the given script. The script must define a valid class that implements the Processor interface, and it must set a variable 'processor' to an instance of the class. Processor methods such as onTrigger() will be delegated to the scripted Processor instance. Also any Relationships or PropertyDescriptors defined by the scripted processor will be added to the configuration dialog. The scripted processor can implement public void setLogger(ComponentLog logger) to get access to the parent logger, as well as public void onScheduled(ProcessContext context) and public void onStopped(ProcessContext context) methods to be invoked when the parent InvokeScriptedProcessor is scheduled or stopped, respectively.  Experimental: Impact of sustained usage not yet verified.</description><tags><tag>script</tag><tag>invoke</tag><tag>groovy</tag><tag>python</tag><tag>jython</tag><tag>jruby</tag><tag>ruby</tag><tag>javascript</tag><tag>js</tag><tag>lua</tag><tag>luaj</tag></tags><properties><property><name>Script Engine</name><displayName>Script Engine</displayName><description>The engine to execute scripts</description><defaultValue>Clojure</defaultValue><allowableValues><allowableValue><displayName>Clojure</displayName><value>Clojure</value><description></description></allowableValue><allowableValue><displayName>ECMAScript</displayName><value>ECMAScript</value><description></description></allowableValue><allowableValue><displayName>Groovy</displayName><value>Groovy</value><description></description></allowableValue><allowableValue><displayName>lua</displayName><value>lua</value><description></description></allowableValue><allowableValue><displayName>python</displayName><value>python</value><description></description></allowableValue><allowableValue><displayName>ruby</displayName><value>ruby</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script File</name><displayName>Script File</displayName><description>Path to script file to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script Body</name><displayName>Script Body</displayName><description>Body of script to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Module Directory</name><displayName>Module Directory</displayName><description>Comma-separated list of paths to files and/or directories which contain modules required by the script.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties><dynamicProperty><name>A script engine property to update</name><value>The value to set it to</value><description>Updates a script engine property specified by the Dynamic Property's key with the value specified by the Dynamic Property's value</description><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope></dynamicProperty></dynamicProperties><relationships></relationships><dynamicRelationship></dynamicRelationship><readsAttributes></readsAttributes><writesAttributes></writesAttributes><stateful><description>Scripts can store and retrieve state using the State Management APIs. Consult the State Manager section of the Developer's Guide for more details.</description><scopes><scope>LOCAL</scope><scope>CLUSTER</scope></scopes></stateful><restricted><restrictions><restriction><requiredPermission>execute code</requiredPermission><explanation>Provides operator the ability to execute arbitrary code assuming all permissions that NiFi has.</explanation></restriction></restrictions></restricted><inputRequirement></inputRequirement><systemResourceConsiderations></systemResourceConsiderations><seeAlso><see>org.apache.nifi.processors.script.ExecuteScript</see></seeAlso></extension><extension><name>org.apache.nifi.processors.script.ExecuteScript</name><type>PROCESSOR</type><deprecationNotice/><description>Experimental - Executes a script given the flow file and a process session.  The script is responsible for handling the incoming flow file (transfer to SUCCESS or remove, e.g.) as well as any flow files created by the script. If the handling is incomplete or incorrect, the session will be rolled back. Experimental: Impact of sustained usage not yet verified.</description><tags><tag>script</tag><tag>execute</tag><tag>groovy</tag><tag>python</tag><tag>jython</tag><tag>jruby</tag><tag>ruby</tag><tag>javascript</tag><tag>js</tag><tag>lua</tag><tag>luaj</tag><tag>clojure</tag></tags><properties><property><name>Script Engine</name><displayName>Script Engine</displayName><description>The engine to execute scripts</description><defaultValue>Clojure</defaultValue><allowableValues><allowableValue><displayName>Clojure</displayName><value>Clojure</value><description></description></allowableValue><allowableValue><displayName>ECMAScript</displayName><value>ECMAScript</value><description></description></allowableValue><allowableValue><displayName>Groovy</displayName><value>Groovy</value><description></description></allowableValue><allowableValue><displayName>lua</displayName><value>lua</value><description></description></allowableValue><allowableValue><displayName>python</displayName><value>python</value><description></description></allowableValue><allowableValue><displayName>ruby</displayName><value>ruby</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script File</name><displayName>Script File</displayName><description>Path to script file to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script Body</name><displayName>Script Body</displayName><description>Body of script to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Module Directory</name><displayName>Module Directory</displayName><description>Comma-separated list of paths to files and/or directories which contain modules required by the script.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties><dynamicProperty><name>A script engine property to update</name><value>The value to set it to</value><description>Updates a script engine property specified by the Dynamic Property's key with the value specified by the Dynamic Property's value</description><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope></dynamicProperty></dynamicProperties><relationships><relationship><name>success</name><description>FlowFiles that were successfully processed</description><autoTerminated>false</autoTerminated></relationship><relationship><name>failure</name><description>FlowFiles that failed to be processed</description><autoTerminated>false</autoTerminated></relationship></relationships><dynamicRelationship></dynamicRelationship><readsAttributes></readsAttributes><writesAttributes></writesAttributes><stateful><description>Scripts can store and retrieve state using the State Management APIs. Consult the State Manager section of the Developer's Guide for more details.</description><scopes><scope>LOCAL</scope><scope>CLUSTER</scope></scopes></stateful><restricted><restrictions><restriction><requiredPermission>execute code</requiredPermission><explanation>Provides operator the ability to execute arbitrary code assuming all permissions that NiFi has.</explanation></restriction></restrictions></restricted><inputRequirement>INPUT_ALLOWED</inputRequirement><systemResourceConsiderations></systemResourceConsiderations><seeAlso><see>org.apache.nifi.processors.script.InvokeScriptedProcessor</see></seeAlso></extension><extension><name>org.apache.nifi.record.script.ScriptedRecordSetWriter</name><type>CONTROLLER_SERVICE</type><deprecationNotice/><description>Allows the user to provide a scripted RecordSetWriterFactory instance in order to write records to an outgoing flow file.</description><tags><tag>record</tag><tag>writer</tag><tag>script</tag><tag>invoke</tag><tag>groovy</tag><tag>python</tag><tag>jython</tag><tag>jruby</tag><tag>ruby</tag><tag>javascript</tag><tag>js</tag><tag>lua</tag><tag>luaj</tag></tags><properties><property><name>Script Engine</name><displayName>Script Engine</displayName><description>The engine to execute scripts</description><defaultValue>Clojure</defaultValue><allowableValues><allowableValue><displayName>Clojure</displayName><value>Clojure</value><description></description></allowableValue><allowableValue><displayName>ECMAScript</displayName><value>ECMAScript</value><description></description></allowableValue><allowableValue><displayName>Groovy</displayName><value>Groovy</value><description></description></allowableValue><allowableValue><displayName>lua</displayName><value>lua</value><description></description></allowableValue><allowableValue><displayName>python</displayName><value>python</value><description></description></allowableValue><allowableValue><displayName>ruby</displayName><value>ruby</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script File</name><displayName>Script File</displayName><description>Path to script file to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script Body</name><displayName>Script Body</displayName><description>Body of script to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Module Directory</name><displayName>Module Directory</displayName><description>Comma-separated list of paths to files and/or directories which contain modules required by the script.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties></dynamicProperties><stateful></stateful><restricted><restrictions><restriction><requiredPermission>execute code</requiredPermission><explanation>Provides operator the ability to execute arbitrary code assuming all permissions that NiFi has.</explanation></restriction></restrictions></restricted><inputRequirement></inputRequirement><systemResourceConsiderations></systemResourceConsiderations><seeAlso/><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordSetWriterFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>1.10.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.lookup.script.SimpleScriptedLookupService</name><type>CONTROLLER_SERVICE</type><deprecationNotice/><description>Allows the user to provide a scripted LookupService instance in order to enrich records from an incoming flow file. The script is expected to return an optional string value rather than an arbitrary object (record, e.g.). Also the scripted lookup service should implement StringLookupService, otherwise the getValueType() method must be implemented even though it will be ignored, as SimpleScriptedLookupService returns String as the value type on the script's behalf. Please note that due to a bug in Jython that remains unresolved, it is not possible to use Jython to write a script for this service in Python.</description><tags><tag>lookup</tag><tag>script</tag><tag>invoke</tag><tag>groovy</tag><tag>python</tag><tag>jython</tag><tag>jruby</tag><tag>ruby</tag><tag>javascript</tag><tag>js</tag><tag>lua</tag><tag>luaj</tag></tags><properties><property><name>Script Engine</name><displayName>Script Engine</displayName><description>The engine to execute scripts</description><defaultValue>Clojure</defaultValue><allowableValues><allowableValue><displayName>Clojure</displayName><value>Clojure</value><description></description></allowableValue><allowableValue><displayName>ECMAScript</displayName><value>ECMAScript</value><description></description></allowableValue><allowableValue><displayName>Groovy</displayName><value>Groovy</value><description></description></allowableValue><allowableValue><displayName>lua</displayName><value>lua</value><description></description></allowableValue><allowableValue><displayName>ruby</displayName><value>ruby</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script File</name><displayName>Script File</displayName><description>Path to script file to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script Body</name><displayName>Script Body</displayName><description>Body of script to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Module Directory</name><displayName>Module Directory</displayName><description>Comma-separated list of paths to files and/or directories which contain modules required by the script.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties></dynamicProperties><stateful></stateful><restricted><restrictions><restriction><requiredPermission>execute code</requiredPermission><explanation>Provides operator the ability to execute arbitrary code assuming all permissions that NiFi has.</explanation></restriction></restrictions></restricted><inputRequirement></inputRequirement><systemResourceConsiderations></systemResourceConsiderations><seeAlso/><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.lookup.StringLookupService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>1.10.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.record.script.ScriptedReader</name><type>CONTROLLER_SERVICE</type><deprecationNotice/><description>Allows the user to provide a scripted RecordReaderFactory instance in order to read/parse/generate records from an incoming flow file.</description><tags><tag>record</tag><tag>recordFactory</tag><tag>script</tag><tag>invoke</tag><tag>groovy</tag><tag>python</tag><tag>jython</tag><tag>jruby</tag><tag>ruby</tag><tag>javascript</tag><tag>js</tag><tag>lua</tag><tag>luaj</tag></tags><properties><property><name>Script Engine</name><displayName>Script Engine</displayName><description>The engine to execute scripts</description><defaultValue>Clojure</defaultValue><allowableValues><allowableValue><displayName>Clojure</displayName><value>Clojure</value><description></description></allowableValue><allowableValue><displayName>ECMAScript</displayName><value>ECMAScript</value><description></description></allowableValue><allowableValue><displayName>Groovy</displayName><value>Groovy</value><description></description></allowableValue><allowableValue><displayName>lua</displayName><value>lua</value><description></description></allowableValue><allowableValue><displayName>python</displayName><value>python</value><description></description></allowableValue><allowableValue><displayName>ruby</displayName><value>ruby</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script File</name><displayName>Script File</displayName><description>Path to script file to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script Body</name><displayName>Script Body</displayName><description>Body of script to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Module Directory</name><displayName>Module Directory</displayName><description>Comma-separated list of paths to files and/or directories which contain modules required by the script.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties></dynamicProperties><stateful></stateful><restricted><restrictions><restriction><requiredPermission>execute code</requiredPermission><explanation>Provides operator the ability to execute arbitrary code assuming all permissions that NiFi has.</explanation></restriction></restrictions></restricted><inputRequirement></inputRequirement><systemResourceConsiderations></systemResourceConsiderations><seeAlso/><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>1.10.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.lookup.script.ScriptedLookupService</name><type>CONTROLLER_SERVICE</type><deprecationNotice/><description>Allows the user to provide a scripted LookupService instance in order to enrich records from an incoming flow file. Please note, that due to a bug in Jython that remains unresolved, it is not possible to use Jython to write a script for this service in Python.</description><tags><tag>lookup</tag><tag>record</tag><tag>script</tag><tag>invoke</tag><tag>groovy</tag><tag>python</tag><tag>jython</tag><tag>jruby</tag><tag>ruby</tag><tag>javascript</tag><tag>js</tag><tag>lua</tag><tag>luaj</tag></tags><properties><property><name>Script Engine</name><displayName>Script Engine</displayName><description>The engine to execute scripts</description><defaultValue>Clojure</defaultValue><allowableValues><allowableValue><displayName>Clojure</displayName><value>Clojure</value><description></description></allowableValue><allowableValue><displayName>ECMAScript</displayName><value>ECMAScript</value><description></description></allowableValue><allowableValue><displayName>Groovy</displayName><value>Groovy</value><description></description></allowableValue><allowableValue><displayName>lua</displayName><value>lua</value><description></description></allowableValue><allowableValue><displayName>ruby</displayName><value>ruby</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script File</name><displayName>Script File</displayName><description>Path to script file to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script Body</name><displayName>Script Body</displayName><description>Body of script to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Module Directory</name><displayName>Module Directory</displayName><description>Comma-separated list of paths to files and/or directories which contain modules required by the script.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties></dynamicProperties><stateful></stateful><restricted><restrictions><restriction><requiredPermission>execute code</requiredPermission><explanation>Provides operator the ability to execute arbitrary code assuming all permissions that NiFi has.</explanation></restriction></restrictions></restricted><inputRequirement></inputRequirement><systemResourceConsiderations></systemResourceConsiderations><seeAlso/><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.lookup.LookupService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>1.10.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.reporting.script.ScriptedReportingTask</name><type>REPORTING_TASK</type><deprecationNotice/><description>Provides reporting and status information to a script. ReportingContext, ComponentLog, and VirtualMachineMetrics objects are made available as variables (context, log, and vmMetrics, respectively) to the script for further processing. The context makes various information available such as events, provenance, bulletins, controller services, process groups, Java Virtual Machine metrics, etc.</description><tags><tag>reporting</tag><tag>script</tag><tag>execute</tag><tag>groovy</tag><tag>python</tag><tag>jython</tag><tag>jruby</tag><tag>ruby</tag><tag>javascript</tag><tag>js</tag><tag>lua</tag><tag>luaj</tag></tags><properties><property><name>Script Engine</name><displayName>Script Engine</displayName><description>The engine to execute scripts</description><defaultValue>Clojure</defaultValue><allowableValues><allowableValue><displayName>Clojure</displayName><value>Clojure</value><description></description></allowableValue><allowableValue><displayName>ECMAScript</displayName><value>ECMAScript</value><description></description></allowableValue><allowableValue><displayName>Groovy</displayName><value>Groovy</value><description></description></allowableValue><allowableValue><displayName>lua</displayName><value>lua</value><description></description></allowableValue><allowableValue><displayName>python</displayName><value>python</value><description></description></allowableValue><allowableValue><displayName>ruby</displayName><value>ruby</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script File</name><displayName>Script File</displayName><description>Path to script file to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Script Body</name><displayName>Script Body</displayName><description>Body of script to execute. Only one of Script File or Script Body may be used</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Module Directory</name><displayName>Module Directory</displayName><description>Comma-separated list of paths to files and/or directories which contain modules required by the script.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties><dynamicProperty><name>A script engine property to update</name><value>The value to set it to</value><description>Updates a script engine property specified by the Dynamic Property's key with the value specified by the Dynamic Property's value</description><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope></dynamicProperty></dynamicProperties><stateful></stateful><restricted><restrictions><restriction><requiredPermission>execute code</requiredPermission><explanation>Provides operator the ability to execute arbitrary code assuming all permissions that NiFi has.</explanation></restriction></restrictions></restricted><inputRequirement></inputRequirement><systemResourceConsiderations></systemResourceConsiderations><seeAlso/></extension></extensions></extensionManifest>